__NOTOC__

== Summary ==

A [[Tilemap]] that was given a name can be controlled by scripts.

== Instances ==
An instance is created by being defined in a level. It may be accessed via its <tt>name</tt> from scripts and via <tt>sector.''name''</tt> from the console.

=== Example ===

Example of a definition:
 <code>
  (tilemap
    (name "niftymap")
    (path
      (mode "circular")
      (node
        (x 832)
        (y 800)
        (time 10)
      )
      (node
        (x 832)
        (y 704)
        (time 10)
      )
    )
    (width …)
    (height …)
    (tiles …)
  ) 
 </code>

The above tilemap will be exposed under the name “niftymap” in the scripting engine. Example usage:

 <code>
  niftymap.goto_node(1);
  niftymap.fade(0.0, 10)
 </code>
This will cause the tilemap to slowly move left, fading out as it goes, and disappear completely when it reaches its destination.
Never fear, though; it is still there. From the console, you can enter:

<code>
  niftymap.goto_node(0);
  niftymap.fade(1.0, 15)
</code>
The tilemap will then reverse its previous actions, ending up back where it started, but it will only reach full opacity 5 seconds after it stops.

== Methods ==
{| class="objectlist"
! class="method"| goto_node(int node_no)
| Move tilemap along path until at given node, then stop.
|-
! class="method"| start_moving()
| Start moving tilemap
|-
! class="method"| stop_moving()
| Stop tilemap at next node
|-
! class="method"| fade(float alpha, float seconds)
Start fading the tilemap to opacity given by alpha. Destination opacity will be reached after seconds game seconds. Also influences solidity.
| 
|-
! class="method"| set_alpha(float alpha)
| Instantly switch tilemap's opacity to alpha. Also influences solidity.
|-
! class="method"| float get_alpha()
| Return the tilemap's opacity. Note that while the tilemap is fading in or out, this will return the current alpha value, not the target alpha.
|}

== Constants ==

None

[[Category:Scripting Reference]]
